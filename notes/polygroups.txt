let's mess with a polygroup in animtest
block 6.1 loads at 811615c0
the tri closest to the wall is in group 3, offset 0x69C
+ 0xE (first unknown field) = 0x6AA

Offset	0x00069C
Idx	3
ID	0x00
1stPoly	9
X	0 - 153 (153)
Y	-22 - -22 (0)
Z	0 - 640 (640)
Flags	0x0004
Unk0E	0x0000
Unk11	0x00

testing with no sound for now

0E [0000]:
	1111: no change
	EEEE: no change
	0101: no change
10 [0000]: "id"
	1111: no change
	EEEE: no change
	0101: no change
	the second byte is actually the surface type:
	00: bottom of rivers, OoB trees (probably "no special effect")
	01: grass
	02: sand
	03: snow
	08: instant death (DragRockBot)
	09: ice platform? cannon guy stands on it in IM
	0D: ice (slippery)
	0E: water - makes a splash when hit with staff
	10: gold (CRF mine entrance)
	12: rough stone
	13: magic cave floor/wall
	18: wood
	19: stone (including hot stone in DIM)
	1A: lava
	1B: ice wall
	1D: conveyor belt
	21: ? seen in Arwing levels
	22: metal

12 [0004]: "flags"
	0000: no change
	FFFF: it seems to be slightly higher. we can fall through it if we approach from certain angles.
	0001: no change
	00FF: similar to FFFF but we fall through easier
	FF00: no change
	7F04: no change
	8004: no change
from the code it looks like flag 0x10 being set or flag 4 being clear disables some collision

let's try changing the polygon itself (offset 0x734)
06 [1F03]: "id"
	0000: we fall through
	1F00: similar effect to above fall-through
	1F0F: no change
	1F0C: same as 1F00
	0003: same as 1F00. we can land on it if we fall from high up, even though our Y coord is still 127.
	FF03: no change
	7F03: no change
	1003: fall thru
	0F03: no change
	1E03: partial fall thru
	1103: partial fall thru, but different spots
	1703: again different spots
interestingly this is never read! lolbreakpoints
plotting it by color in the map viewer shows a clear pattern where the high byte correlates with the polygon's Z position within the block and the low byte correlates with the X position. with a few exceptions, the colors just about form an axis grid. it's not very obvious in Animtest because of the large polygons.
in TTH and CC there's a bunch of large yellow (=both bytes high) planes toward the +Z end of the map.
one possibility is that these are indices of some sort and just happen to be ordered this way? seems unlikely though.
also could be encoding a range to prevent doing hit detection on polys that aren't nearby?
if either byte of this value is 0, it skips a bunch of code.
this is actually two bytes, each of which is a bitflag.
for the high byte: divide the block's Z axis into 8 strips. each bit tells whether the poly overlaps that strip.
for the low byte: same, but the X axis.

at 80069120 some flags, which are derived in obscure ways from the polygon flags and other things, are set; if we change to a fixed value we can get interesting effects.
unfortunately no way to really know what the default value is because this changes it for every polygon.
0000: no shadows
FFFF: shadows, you fall through it
0001: no shadows, you can walk on water
0002: same
0004: same
0008: the shadows are back
0010: you fall through (seems to disable most/all? collision)
0020: same as 0002
0040: you get slightly darker?
0080: same as 0002
curiously none of these make you not walk on the water
high byte could be something else
actually the high byte isn't even used
04 overrides 10 in some places