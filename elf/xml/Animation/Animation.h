//include/sfa/xml/Animation.xml
typedef union Curve {
	float unk00;
	struct __attribute__((packed)) { u8 _pad_unk04[0x4]; float unk04; };
	struct __attribute__((packed)) { u8 _pad_unk08[0x8]; float unk08; };
	struct __attribute__((packed)) { u8 _pad_unk0C[0xC]; float unk0C; };
	struct __attribute__((packed)) { u8 _pad_curPoint[0x10]; int curPoint; };
	struct __attribute__((packed)) { u8 _pad_length[0x14]; float length; };
	struct __attribute__((packed)) { u8 _pad_segLength[0x18]; float segLength; };
	struct __attribute__((packed)) { u8 _pad_unk68[0x68]; float unk68; };
	struct __attribute__((packed)) { u8 _pad_unk6C[0x6C]; float unk6C; };
	struct __attribute__((packed)) { u8 _pad_unk70[0x70]; float unk70; };
	struct __attribute__((packed)) { u8 _pad_bIsClosed[0x80]; int bIsClosed; };
	struct __attribute__((packed)) { u8 _pad_unk84[0x84]; int unk84; };
	struct __attribute__((packed)) { u8 _pad_nControlPoints[0x90]; int nControlPoints; };
	struct __attribute__((packed)) { u8 _pad_func[0x94]; undefined* func; };
	struct __attribute__((packed)) { u8 _pad_fptr98[0x98]; undefined4 fptr98; };
	struct __attribute__((packed)) { u8 _pad_unk9C[0x9C]; float unk9C; };
	struct __attribute__((packed)) { u8 _pad_unkA0[0xA0]; float unkA0; };
	struct __attribute__((packed)) { u8 _pad_unkA4[0xA4]; float unkA4; };
	struct __attribute__((packed)) { u8 _pad_unkA8[0xA8]; int unkA8; };
	struct __attribute__((packed)) { u8 _pad_unkAC[0xAC]; float unkAC; };
	struct __attribute__((packed)) { u8 _pad_unkB0[0xB0]; float unkB0; };
	struct __attribute__((packed)) { u8 _pad_unkB4[0xB4]; float unkB4; };
	struct __attribute__((packed)) { u8 _pad_unkB8[0xB8]; undefined4 unkB8; };
	struct __attribute__((packed)) { u8 _pad_unkBC[0xBC]; undefined4 unkBC; };
	struct __attribute__((packed)) { u8 _pad_unkC0[0xC0]; float unkC0; };
	struct __attribute__((packed)) { u8 _pad_unkC4[0xC4]; float unkC4; };
	struct __attribute__((packed)) { u8 _pad_unkC8[0xC8]; undefined4 unkC8; };
	struct __attribute__((packed)) { u8 _pad_unkCC[0xCC]; undefined4 unkCC; };
	struct __attribute__((packed)) { u8 _pad_unkD0[0xD0]; float unkD0; };
	struct __attribute__((packed)) { u8 _pad_unkD4[0xD4]; float unkD4; };
	struct __attribute__((packed)) { u8 _pad_unkD8[0xD8]; undefined4 unkD8; };
	struct __attribute__((packed)) { u8 _pad_unkDC[0xDC]; undefined4 unkDC; };
	struct __attribute__((packed)) { u8 _pad_unkE0[0xE0]; float unkE0; };
	struct __attribute__((packed)) { u8 _pad_unkE4[0xE4]; float unkE4; };
	struct __attribute__((packed)) { u8 _pad_unkE8[0xE8]; undefined4 unkE8; };
	struct __attribute__((packed)) { u8 _pad_unkEC[0xEC]; undefined4 unkEC; };
	struct __attribute__((packed)) { u8 _pad_unkF0[0xF0]; float unkF0; };
	struct __attribute__((packed)) { u8 _pad_unkF4[0xF4]; float unkF4; };
	struct __attribute__((packed)) { u8 _pad_unkF8[0xF8]; undefined4 unkF8; };
	struct __attribute__((packed)) { u8 _pad_unkFC[0xFC]; undefined4 unkFC; };
	struct __attribute__((packed)) { u8 _pad_unk100[0x100]; float unk100; };
	struct __attribute__((packed)) { u8 _pad_unk104[0x104]; float unk104; };
} Curve;
