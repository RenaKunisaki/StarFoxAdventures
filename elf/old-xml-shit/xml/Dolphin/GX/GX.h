//include/sfa/xml/Dolphin/GX.xml
typedef enum { //type:u8
	GXOP_NOP = 0x0,
	GXOP_LOAD_CP_REG = 0x8,
	GXOP_LOAD_XF_REG = 0x10,
	GXOP_LOAD_INDX_A0 = 0x20,
	GXOP_LOAD_INDX_A1 = 0x21,
	GXOP_LOAD_INDX_A2 = 0x22,
	GXOP_LOAD_INDX_A3 = 0x23,
	GXOP_LOAD_INDX_A4 = 0x24,
	GXOP_LOAD_INDX_A5 = 0x25,
	GXOP_LOAD_INDX_A6 = 0x26,
	GXOP_LOAD_INDX_A7 = 0x27,
	GXOP_LOAD_INDX_B0 = 0x28,
	GXOP_LOAD_INDX_B1 = 0x29,
	GXOP_LOAD_INDX_B2 = 0x2a,
	GXOP_LOAD_INDX_B3 = 0x2b,
	GXOP_LOAD_INDX_B4 = 0x2c,
	GXOP_LOAD_INDX_B5 = 0x2d,
	GXOP_LOAD_INDX_B6 = 0x2e,
	GXOP_LOAD_INDX_B7 = 0x2f,
	GXOP_LOAD_INDX_C0 = 0x30,
	GXOP_LOAD_INDX_C1 = 0x31,
	GXOP_LOAD_INDX_C2 = 0x32,
	GXOP_LOAD_INDX_C3 = 0x33,
	GXOP_LOAD_INDX_C4 = 0x34,
	GXOP_LOAD_INDX_C5 = 0x35,
	GXOP_LOAD_INDX_C6 = 0x36,
	GXOP_LOAD_INDX_C7 = 0x37,
	GXOP_LOAD_INDX_D0 = 0x38,
	GXOP_LOAD_INDX_D1 = 0x39,
	GXOP_LOAD_INDX_D2 = 0x3a,
	GXOP_LOAD_INDX_D3 = 0x3b,
	GXOP_LOAD_INDX_D4 = 0x3c,
	GXOP_LOAD_INDX_D5 = 0x3d,
	GXOP_LOAD_INDX_D6 = 0x3e,
	GXOP_LOAD_INDX_D7 = 0x3f,
	GXOP_CALL_DL = 0x40,
	GXOP_INVALIDATE_VTX_CACHE = 0x48,
	GXOP_LOAD_BP_REG = 0x61,
	GXOP_DRAW_QUADS_0 = 0x80,
	GXOP_DRAW_QUADS_1 = 0x81,
	GXOP_DRAW_QUADS_2 = 0x82,
	GXOP_DRAW_QUADS_3 = 0x83,
	GXOP_DRAW_QUADS_4 = 0x84,
	GXOP_DRAW_QUADS_5 = 0x85,
	GXOP_DRAW_QUADS_6 = 0x86,
	GXOP_DRAW_QUADS_7 = 0x87,
	GXOP_DRAW_TRIANGLES_0 = 0x90,
	GXOP_DRAW_TRIANGLES_1 = 0x91,
	GXOP_DRAW_TRIANGLES_2 = 0x92,
	GXOP_DRAW_TRIANGLES_3 = 0x93,
	GXOP_DRAW_TRIANGLES_4 = 0x94,
	GXOP_DRAW_TRIANGLES_5 = 0x95,
	GXOP_DRAW_TRIANGLES_6 = 0x96,
	GXOP_DRAW_TRIANGLES_7 = 0x97,
	GXOP_DRAW_TRISTRIP_0 = 0x98,
	GXOP_DRAW_TRISTRIP_1 = 0x99,
	GXOP_DRAW_TRISTRIP_2 = 0x9a,
	GXOP_DRAW_TRISTRIP_3 = 0x9b,
	GXOP_DRAW_TRISTRIP_4 = 0x9c,
	GXOP_DRAW_TRISTRIP_5 = 0x9d,
	GXOP_DRAW_TRISTRIP_6 = 0x9e,
	GXOP_DRAW_TRISTRIP_7 = 0x9f,
	GXOP_DRAW_TRIFAN_0 = 0xa0,
	GXOP_DRAW_TRIFAN_1 = 0xa1,
	GXOP_DRAW_TRIFAN_2 = 0xa2,
	GXOP_DRAW_TRIFAN_3 = 0xa3,
	GXOP_DRAW_TRIFAN_4 = 0xa4,
	GXOP_DRAW_TRIFAN_5 = 0xa5,
	GXOP_DRAW_TRIFAN_6 = 0xa6,
	GXOP_DRAW_TRIFAN_7 = 0xa7,
	GXOP_DRAW_LINES_0 = 0xa8,
	GXOP_DRAW_LINES_1 = 0xa9,
	GXOP_DRAW_LINES_2 = 0xaa,
	GXOP_DRAW_LINES_3 = 0xab,
	GXOP_DRAW_LINES_4 = 0xac,
	GXOP_DRAW_LINES_5 = 0xad,
	GXOP_DRAW_LINES_6 = 0xae,
	GXOP_DRAW_LINES_7 = 0xaf,
	GXOP_DRAW_LINESTRIP_0 = 0xb0,
	GXOP_DRAW_LINESTRIP_1 = 0xb1,
	GXOP_DRAW_LINESTRIP_2 = 0xb2,
	GXOP_DRAW_LINESTRIP_3 = 0xb3,
	GXOP_DRAW_LINESTRIP_4 = 0xb4,
	GXOP_DRAW_LINESTRIP_5 = 0xb5,
	GXOP_DRAW_LINESTRIP_6 = 0xb6,
	GXOP_DRAW_LINESTRIP_7 = 0xb7,
	GXOP_DRAW_POINTS_0 = 0xb8,
	GXOP_DRAW_POINTS_1 = 0xb9,
	GXOP_DRAW_POINTS_2 = 0xba,
	GXOP_DRAW_POINTS_3 = 0xbb,
	GXOP_DRAW_POINTS_4 = 0xbc,
	GXOP_DRAW_POINTS_5 = 0xbd,
	GXOP_DRAW_POINTS_6 = 0xbe,
	GXOP_DRAW_POINTS_7 = 0xbf,
} GXOpcode;
//include/sfa/xml/Dolphin/GX.xml
typedef enum { //type:u32
	VcdHiMask_TEX7 = 0xC000,
	VcdHiMask_TEX6 = 0x3000,
	VcdHiMask_TEX5 = 0xC00,
	VcdHiMask_TEX4 = 0x300,
	VcdHiMask_TEX3 = 0xC0,
	VcdHiMask_TEX2 = 0x30,
	VcdHiMask_TEX1 = 0xC,
	VcdHiMask_TEX0 = 0x3,
} VcdHiMask;
//include/sfa/xml/Dolphin/GX.xml
typedef enum { //type:u32
	VcdLoMask_T1MIDX = 0x4,
	VcdLoMask_NRM0 = 0x800,
	VcdLoMask_T3MIDX = 0x10,
	VcdLoMask_T6MIDX = 0x80,
	VcdLoMask_T4MIDX = 0x20,
	VcdLoMask_NRM = 0x1800,
	VcdLoMask_COL10 = 0x8000,
	VcdLoMask_PMIDX = 0x1,
	VcdLoMask_NRM1 = 0x1000,
	VcdLoMask_COL1 = 0x18000,
	VcdLoMask_COL0 = 0x6000,
	VcdLoMask_T7MIDX = 0x100,
	VcdLoMask_T0MIDX = 0x2,
	VcdLoMask_COL01 = 0x4000,
	VcdLoMask_COL00 = 0x2000,
	VcdLoMask_COL11 = 0x10000,
	VcdLoMask_POS = 0x600,
	VcdLoMask_T2MIDX = 0x8,
	VcdLoMask_T5MIDX = 0x40,
	VcdLoMask_POS1 = 0x400,
	VcdLoMask_POS0 = 0x200,
} VcdLoMask;
//include/sfa/xml/Dolphin/GX.xml
typedef union Color4b {
	u8 r;
	struct __attribute__((packed)) { u8 _pad_g[0x1]; u8 g; };
	struct __attribute__((packed)) { u8 _pad_b[0x2]; u8 b; };
	struct __attribute__((packed)) { u8 _pad_a[0x3]; u8 a; };
} Color4b;
